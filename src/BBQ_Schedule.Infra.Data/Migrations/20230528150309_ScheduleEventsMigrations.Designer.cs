// <auto-generated />
using System;
using BBQ_Schedule.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BBQ_Schedule.Infra.Data.Migrations
{
    [DbContext(typeof(ScheduleContext))]
    [Migration("20230528150309_ScheduleEventsMigrations")]
    partial class ScheduleEventsMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BBQ_Schedule.Domain.Models.Guest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Contribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("WithDrink")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ScheduleId");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("BBQ_Schedule.Domain.Models.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Location")
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("TotalCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalPeople")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("BBQ_Schedule.Domain.Models.Guest", b =>
                {
                    b.HasOne("BBQ_Schedule.Domain.Models.Schedule", "Schedule")
                        .WithMany("Guests")
                        .HasForeignKey("ScheduleId")
                        .IsRequired();

                    b.Navigation("Schedule");
                });

            modelBuilder.Entity("BBQ_Schedule.Domain.Models.Schedule", b =>
                {
                    b.Navigation("Guests");
                });
#pragma warning restore 612, 618
        }
    }
}
